/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Conroller;

import Shape.Line;
import Shape.Shapes;
import View.Paint0;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;

/**
 *
 * @author Micro Systems
 */
public class Controller {

    public static boolean go = false;
    public static int x, x1, y, y1, distance;
    Shape toDraw;

    ArrayList<Shapes> allShapes = new ArrayList<Shapes>();
    Graphics2D graphicalDrawing;

    public void Controller() {
        Paint0 paintApp = new Paint0();
        paintApp.setVisible(true);
        if (go) {
            draw();
            go = false;
        }
        

    }

    public void draw() {
        switch (Paint0.currentType) {
            case "Line":
                allShapes.add(new Line(x, y, x1, y1, distance, Paint0.color));
                toDraw = this.drawLine(x, y, x1, y1);
                break;
            case "Ellipse":
                //allShapes.add(new Ellipse(x, y, x1, y1, distance, Paint0.color ));
                break;
            case "Circle":
                //allShapes.add(new Circle(x, y, x1, y1, distance, Paint0.color ));
                break;
            case "Rect":
                //allShapes.add(new Rect(x, y, x1, y1, distance, Paint0.color ));
                break;
            case "Square":
                //allShapes.add(new Square(x, y, x1, y1, distance, Paint0.color ));
                break;
        }
    }

    public static void go(int ix, int iy, int ix1, int iy1, int idistance) {
        x = ix;
        y = iy;
        x1 = ix1;
        y1 = iy1;
        distance = idistance;
    }

    private Rectangle2D.Float drawRectangle(int x1, int y1, int x2, int y2) {

        int x = Math.min(x1, x2);
        int y = Math.min(y1, y2);

        int width = Math.abs(x1 - x2);
        int height = Math.abs(y1 - y2);

        return new Rectangle2D.Float(x, y, width, height);

    }

    private Ellipse2D.Float drawEllipse(int x1, int y1, int x2, int y2) {

        int x = Math.min(x1, x2);
        int y = Math.min(y1, y2);

        int width = Math.abs(x1 - x2);
        int height = Math.abs(y1 - y2);

        return new Ellipse2D.Float(x, y, width, height);

    }

    private Line2D.Float drawLine(int x1, int y1, int x2, int y2) {

        return new Line2D.Float(x1, y1, x2, y2);
    }

    public void paint(Graphics g) {

        graphicalDrawing = (Graphics2D) g;
        graphicalDrawing.setStroke(new BasicStroke(0));
        graphicalDrawing.setPaint(Color.BLACK);
        graphicalDrawing.draw(toDraw);

    }

    public static void main(String[] args) {
        Controller current = new Controller();
    }

}
